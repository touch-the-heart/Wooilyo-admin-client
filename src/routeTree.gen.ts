/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as CategoryRouteImport } from './routes/category'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProductIndexRouteImport } from './routes/product/index'
import { Route as ProductCreateRouteImport } from './routes/product/create'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const CategoryRoute = CategoryRouteImport.update({
  id: '/category',
  path: '/category',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductIndexRoute = ProductIndexRouteImport.update({
  id: '/product/',
  path: '/product/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductCreateRoute = ProductCreateRouteImport.update({
  id: '/product/create',
  path: '/product/create',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/category': typeof CategoryRoute
  '/signup': typeof SignupRoute
  '/product/create': typeof ProductCreateRoute
  '/product': typeof ProductIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/category': typeof CategoryRoute
  '/signup': typeof SignupRoute
  '/product/create': typeof ProductCreateRoute
  '/product': typeof ProductIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/category': typeof CategoryRoute
  '/signup': typeof SignupRoute
  '/product/create': typeof ProductCreateRoute
  '/product/': typeof ProductIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/category' | '/signup' | '/product/create' | '/product'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/category' | '/signup' | '/product/create' | '/product'
  id:
    | '__root__'
    | '/'
    | '/category'
    | '/signup'
    | '/product/create'
    | '/product/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CategoryRoute: typeof CategoryRoute
  SignupRoute: typeof SignupRoute
  ProductCreateRoute: typeof ProductCreateRoute
  ProductIndexRoute: typeof ProductIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/category': {
      id: '/category'
      path: '/category'
      fullPath: '/category'
      preLoaderRoute: typeof CategoryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/': {
      id: '/product/'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/product/create': {
      id: '/product/create'
      path: '/product/create'
      fullPath: '/product/create'
      preLoaderRoute: typeof ProductCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CategoryRoute: CategoryRoute,
  SignupRoute: SignupRoute,
  ProductCreateRoute: ProductCreateRoute,
  ProductIndexRoute: ProductIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
