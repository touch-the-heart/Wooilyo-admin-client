/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as CategoryImport } from './routes/category'
import { Route as IndexImport } from './routes/index'
import { Route as ProductIndexImport } from './routes/product/index'
import { Route as ProductCreateImport } from './routes/product/create'
import { Route as ProductIdImport } from './routes/product/$id'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const CategoryRoute = CategoryImport.update({
  id: '/category',
  path: '/category',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductIndexRoute = ProductIndexImport.update({
  id: '/product/',
  path: '/product/',
  getParentRoute: () => rootRoute,
} as any)

const ProductCreateRoute = ProductCreateImport.update({
  id: '/product/create',
  path: '/product/create',
  getParentRoute: () => rootRoute,
} as any)

const ProductIdRoute = ProductIdImport.update({
  id: '/product/$id',
  path: '/product/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/category': {
      id: '/category'
      path: '/category'
      fullPath: '/category'
      preLoaderRoute: typeof CategoryImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/product/$id': {
      id: '/product/$id'
      path: '/product/$id'
      fullPath: '/product/$id'
      preLoaderRoute: typeof ProductIdImport
      parentRoute: typeof rootRoute
    }
    '/product/create': {
      id: '/product/create'
      path: '/product/create'
      fullPath: '/product/create'
      preLoaderRoute: typeof ProductCreateImport
      parentRoute: typeof rootRoute
    }
    '/product/': {
      id: '/product/'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof ProductIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/category': typeof CategoryRoute
  '/signup': typeof SignupRoute
  '/product/$id': typeof ProductIdRoute
  '/product/create': typeof ProductCreateRoute
  '/product': typeof ProductIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/category': typeof CategoryRoute
  '/signup': typeof SignupRoute
  '/product/$id': typeof ProductIdRoute
  '/product/create': typeof ProductCreateRoute
  '/product': typeof ProductIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/category': typeof CategoryRoute
  '/signup': typeof SignupRoute
  '/product/$id': typeof ProductIdRoute
  '/product/create': typeof ProductCreateRoute
  '/product/': typeof ProductIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/category'
    | '/signup'
    | '/product/$id'
    | '/product/create'
    | '/product'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/category'
    | '/signup'
    | '/product/$id'
    | '/product/create'
    | '/product'
  id:
    | '__root__'
    | '/'
    | '/category'
    | '/signup'
    | '/product/$id'
    | '/product/create'
    | '/product/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CategoryRoute: typeof CategoryRoute
  SignupRoute: typeof SignupRoute
  ProductIdRoute: typeof ProductIdRoute
  ProductCreateRoute: typeof ProductCreateRoute
  ProductIndexRoute: typeof ProductIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CategoryRoute: CategoryRoute,
  SignupRoute: SignupRoute,
  ProductIdRoute: ProductIdRoute,
  ProductCreateRoute: ProductCreateRoute,
  ProductIndexRoute: ProductIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/category",
        "/signup",
        "/product/$id",
        "/product/create",
        "/product/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/category": {
      "filePath": "category.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/product/$id": {
      "filePath": "product/$id.tsx"
    },
    "/product/create": {
      "filePath": "product/create.tsx"
    },
    "/product/": {
      "filePath": "product/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
